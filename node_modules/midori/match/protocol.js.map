{"version":3,"sources":["../../src/match/protocol.js"],"names":["protocol","req","proto","connection","encrypted","headers","split","replace"],"mappings":";;;;;;;AACA;;eAEgBA,QAAD,IACb,kBAAQC,GAAD,IAAS;AACd;AACA;AACA;AACA,MAAIC,KAAK,GAAGD,GAAG,CAACE,UAAJ,CAAeC,SAAf,GAA2B,OAA3B,GAAqC,MAAjD,CAJc,CAKd;;AACAF,EAAAA,KAAK,GAAGD,GAAG,CAACI,OAAJ,CAAY,mBAAZ,KAAoCH,KAA5C;AACAA,EAAAA,KAAK,GAAGA,KAAK,CAACI,KAAN,CAAY,SAAZ,EAAuB,CAAvB,CAAR;AACA,SAAOJ,KAAK,KAAM,GAAEF,QAAS,EAAZ,CAAcO,OAAd,CAAsB,IAAtB,EAA4B,EAA5B,CAAjB;AACD,CATD,C","sourcesContent":["// @flow\nimport {create} from './util';\n\nexport default (protocol: string) =>\n  create((req) => {\n    // TODO: FIXME: Flow seems to think `IncomingMessage` does not have a field\n    // called `connection`.\n    // $ExpectError\n    let proto = req.connection.encrypted ? 'https' : 'http';\n    // TODO: Ensure header is from trusted proxy!!.\n    proto = req.headers['x-forwarded-proto'] || proto;\n    proto = proto.split(/\\s*,\\s*/)[0];\n    return proto === `${protocol}`.replace(/:$/, '');\n  });\n"],"file":"protocol.js"}