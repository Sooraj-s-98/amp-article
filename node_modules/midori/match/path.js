"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.baseUrl = exports.params = void 0;

var _parseurl = _interopRequireDefault(require("parseurl"));

var _pathToRegexp = require("path-to-regexp");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const isAbsolutePath = path => /^\//.test(path);

const params = new WeakMap();
exports.params = params;
const baseUrl = new WeakMap();
exports.baseUrl = baseUrl;

var _default = _path => {
  if (!isAbsolutePath(_path)) {
    throw new TypeError('Must give absolute path.');
  }

  return app => {
    const path = _path.replace(/\/$/, '');

    const tokens = [// TODO: FIXME: Make flow happy.
    // $ExpectError
    ...(app && Array.isArray(app.tokens) ? app.tokens : []), ...(path === '' ? [] : (0, _pathToRegexp.parse)(path))];
    const keys = [];
    const regexp = (0, _pathToRegexp.tokensToRegExp)(tokens, keys, {
      end: false
    }); // TODO: FIXME: Make flow happy.
    // $ExpectError

    return {
      app: _objectSpread({
        tokens
      }, app),
      matches: req => {
        const urlParams = regexp.exec((0, _parseurl.default)(req).pathname);

        if (urlParams) {
          const newParams = params.get(req) || {};
          keys.forEach(({
            name
          }, i) => {
            newParams[name] = urlParams[i + 1];
          });
          params.set(req, newParams);
          baseUrl.set(req, urlParams[0]);
          return true;
        }

        return false;
      }
    };
  };
};

exports.default = _default;
//# sourceMappingURL=path.js.map