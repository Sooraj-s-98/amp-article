{"version":3,"sources":["../../../src/internal/error/upgradeErrorHandler.js"],"names":["upgradeErrorHandler","err","req","socket","_head","ended","writable","console","error","end"],"mappings":";;;;;;;AACA;;AACA;AAKA,MAAMA,mBAAmB,GAAG,CAC1BC,GAD0B,EAE1BC,GAF0B,EAG1BC,MAH0B,EAI1BC,KAJ0B,KAKvB;AACH;AACA,MAAID,MAAM,CAACE,KAAP,IAAgB,CAACF,MAAM,CAACG,QAA5B,EAAsC;AACpCC,IAAAA,OAAO,CAACC,KAAR,CAAc,iDAAd;AACAD,IAAAA,OAAO,CAACC,KAAR,CAAc,8CAAd;AACAD,IAAAA,OAAO,CAACC,KAAR,CAAcP,GAAd;AACA;AACD;;AACDE,EAAAA,MAAM,CAACM,GAAP,CACE,2CAA2C,uBAA3C,GAAqE,MADvE;AAGD,CAhBD;;eAkBeT,mB","sourcesContent":["// @flow\n/* eslint-disable no-console */\n/* global console process */\n\nimport type {IncomingMessage} from 'http';\nimport type {Socket} from 'net';\n\nconst upgradeErrorHandler = (\n  err: Error,\n  req: IncomingMessage,\n  socket: Socket,\n  _head: Buffer,\n) => {\n  // $ExpectError\n  if (socket.ended || !socket.writable) {\n    console.error('Error occured after response already delivered.');\n    console.error('This probably indicates a problem elsewhere.');\n    console.error(err);\n    return;\n  }\n  socket.end(\n    'HTTP/1.1 500 Internal Server Error\\r\\n' + 'Connection: Close\\r\\n' + '\\r\\n',\n  );\n};\n\nexport default upgradeErrorHandler;\n"],"file":"upgradeErrorHandler.js"}