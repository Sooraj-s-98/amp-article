{"version":3,"sources":["../src/createSelector.js"],"names":["createSelector","args","selectors","slice","length","selector","out","cb","next","results","result","_selectors","_selector"],"mappings":";;;;;;;AACA;;;;AAkCA,MAAMA,cAAuB,GAAG,CAC9B,GAAGC,IAD2B,KAEJ;AAC1B,QAAMC,SAAS,GAAGD,IAAI,CAACE,KAAL,CAAW,CAAX,EAAcF,IAAI,CAACG,MAAL,GAAc,CAA5B,CAAlB;AACA,QAAMC,QAAQ,GAAGJ,IAAI,CAACA,IAAI,CAACG,MAAL,GAAc,CAAf,CAArB;;AACA,QAAME,GAAG,GAAIC,EAAD,IAAwC;AAClD,UAAMC,IAAI,GAAG,OAAO,GAAGC,OAAV,KAAoC;AAC/C,YAAMC,MAAS,GAAG,MAAML,QAAQ,CAAC,GAAGI,OAAJ,CAAhC;AACA,aAAO,MAAMF,EAAE,CAACG,MAAD,CAAf;AACD,KAHD;;AAIA,UAAMA,MAAM,GAAG,oBAAM,GAAGR,SAAT,EAAoBM,IAApB,CAAf;AACA,WAAOE,MAAP;AACD,GAPD;;AAQAJ,EAAAA,GAAG,CAACK,UAAJ,GAAiBT,SAAjB;AACAI,EAAAA,GAAG,CAACM,SAAJ,GAAgBP,QAAhB;AACA,SAAOC,GAAP;AACD,CAhBD;;eAkBeN,c","sourcesContent":["// @flow\nimport apply from './apply';\nimport type {App} from './types';\n\ntype CS<S> = {\n  <R>(() => R): ((R) => S) => S,\n  <R, V1>(((V1) => S) => S, (V1) => Promise<R> | R): ((R) => S) => S,\n  <R, V1, V2>(\n    ((V1) => S) => S,\n    ((V2) => S) => S,\n    (V1, V2) => Promise<R> | R,\n  ): ((R) => S) => S,\n  <R, V1, V2, V3>(\n    ((V1) => S) => S,\n    ((V2) => S) => S,\n    ((V3) => S) => S,\n    (V1, V2, V3) => Promise<R> | R,\n  ): ((R) => S) => S,\n  <R, V1, V2, V3, V4>(\n    ((V1) => S) => S,\n    ((V2) => S) => S,\n    ((V3) => S) => S,\n    ((V4) => S) => S,\n    (V1, V2, V3, V4) => Promise<R> | R,\n  ): ((R) => S) => S,\n  <R, V1, V2, V3, V4, V5>(\n    ((V1) => S) => S,\n    ((V2) => S) => S,\n    ((V3) => S) => S,\n    ((V4) => S) => S,\n    ((V5) => S) => S,\n    (V1, V2, V3, V4, V5) => Promise<R> | R,\n  ): ((R) => S) => S,\n};\n\nconst createSelector: CS<App> = <R>(\n  ...args: Array<*>\n): (((R) => App) => App) => {\n  const selectors = args.slice(0, args.length - 1);\n  const selector = args[args.length - 1];\n  const out = (cb: (R) => App | Promise<App>): App => {\n    const next = async (...results): Promise<App> => {\n      const result: R = await selector(...results);\n      return await cb(result);\n    };\n    const result = apply(...selectors, next);\n    return result;\n  };\n  out._selectors = selectors;\n  out._selector = selector;\n  return out;\n};\n\nexport default createSelector;\n"],"file":"createSelector.js"}