{"version":3,"sources":["../src/match.js"],"names":["createMatch","yes","no","x","app","match","yesApp","noApp","upgrade","req","socket","head","result","matches","request","res"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAzCA;;;;;;;AAOe,kBACbA,WADa,EAEbC,GAFa,EAGbC,EAAO,GAAIC,CAAD,IAAOA,CAHJ,EAIR;AACL,SAAO,UAASC,GAAT,EAAc;AACnB,UAAMC,KAAK,GAAGL,WAAW,CAACI,GAAD,CAAzB;AACA,UAAME,MAAM,GAAGL,GAAG,CAACI,KAAK,CAACD,GAAP,CAAlB;AACA,UAAMG,KAAK,GAAGL,EAAE,CAACG,KAAK,CAACD,GAAP,CAAhB;AACA,6BACKA,GADL;AAEEI,MAAAA,OAAO,EAAE,OAAOC,GAAP,EAAYC,MAAZ,EAAoBC,IAApB,KAA6B;AACpC,cAAMC,MAAM,GAAG,MAAMP,KAAK,CAACQ,OAAN,CAAcJ,GAAd,CAArB;;AACA,YAAIG,MAAJ,EAAY;AACV,iBAAO,MAAMN,MAAM,CAACE,OAAP,CAAeC,GAAf,EAAoBC,MAApB,EAA4BC,IAA5B,CAAb;AACD;;AACD,eAAO,MAAMJ,KAAK,CAACC,OAAN,CAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,IAA3B,CAAb;AACD,OARH;AASEG,MAAAA,OAAO,EAAE,OAAOL,GAAP,EAAYM,GAAZ,KAAoB;AAC3B,cAAMH,MAAM,GAAG,MAAMP,KAAK,CAACQ,OAAN,CAAcJ,GAAd,CAArB;;AACA,YAAIG,MAAJ,EAAY;AACV,iBAAO,MAAMN,MAAM,CAACQ,OAAP,CAAeL,GAAf,EAAoBM,GAApB,CAAb;AACD;;AACD,eAAO,MAAMR,KAAK,CAACO,OAAN,CAAcL,GAAd,EAAmBM,GAAnB,CAAb;AACD;AAfH;AAiBD,GArBD;AAsBD","sourcesContent":["// @flow\nimport type {MatchCreator, App} from './types';\n\n/**\n * Branch between two apps based on some given predicate.\n * @param {Function} createMatch Predicate to match against.\n * @param {Function} yes App for when the predicate is true.\n * @param {Function} no App for when the predicate is false.\n * @returns {APp} App instance.\n */\nexport default function(\n  createMatch: MatchCreator,\n  yes: App,\n  no: App = (x) => x,\n): App {\n  return function(app) {\n    const match = createMatch(app);\n    const yesApp = yes(match.app);\n    const noApp = no(match.app);\n    return {\n      ...app,\n      upgrade: async (req, socket, head) => {\n        const result = await match.matches(req);\n        if (result) {\n          return await yesApp.upgrade(req, socket, head);\n        }\n        return await noApp.upgrade(req, socket, head);\n      },\n      request: async (req, res) => {\n        const result = await match.matches(req);\n        if (result) {\n          return await yesApp.request(req, res);\n        }\n        return await noApp.request(req, res);\n      },\n    };\n  };\n}\n\nexport {default as header} from './match/header';\nexport {default as host} from './match/host';\nexport {default as method} from './match/method';\nexport {default as path} from './match/path';\nexport {default as protocol} from './match/protocol';\nexport {default as query} from './match/query';\n"],"file":"match.js"}