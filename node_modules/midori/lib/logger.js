"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.formatStatusCode = exports.formatResponseTime = exports.setConsole = void 0;

var _chalk = _interopRequireDefault(require("chalk"));

var _request = _interopRequireDefault(require("./request"));

var _response = _interopRequireDefault(require("./response"));

var _apply = _interopRequireDefault(require("./apply"));

var _timing = _interopRequireDefault(require("./timing"));

var _pure = _interopRequireDefault(require("./pure"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const identity = x => x;

let consoleObject = console;

const setConsole = c => consoleObject = c;

exports.setConsole = setConsole;

const formatResponseTime = duration => {
  if (typeof duration === 'number') {
    return `${duration.toFixed(3)}ms`;
  }

  return null;
};

exports.formatResponseTime = formatResponseTime;
const codeColors = [[100, _chalk.default.white], [200, _chalk.default.green], [300, _chalk.default.cyan], [400, _chalk.default.yellow], [500, _chalk.default.red]];

const formatStatusCode = statusCode => {
  const color = codeColors.reduce((color, [value, newColor]) => {
    if (statusCode >= value) {
      return newColor;
    }

    return color;
  }, identity);
  return color(statusCode);
};

exports.formatStatusCode = formatStatusCode;

const logger = app => {
  return (0, _apply.default)(_request.default, _response.default, _timing.default.headers, // FIXME: This is kind of a hack for being able put the logger at the start
  // of the compose declaration but have it resolve _AFTER_ the entire app.
  _fn => _p => {
    return app;
  }, (req, res, timing, x) => {
    const line = [formatStatusCode(res.statusCode), _chalk.default.white(req.method), req.url, formatResponseTime(timing)].filter(identity).join(' ');
    consoleObject.log(line);
    return (0, _pure.default)(x);
  })(app);
};

var _default = logger;
exports.default = _default;
//# sourceMappingURL=logger.js.map