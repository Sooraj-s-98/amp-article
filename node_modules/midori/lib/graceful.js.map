{"version":3,"sources":["../src/graceful.js"],"names":["req","socket","_handle","undefined","Connection","next"],"mappings":";;;;;;;AACA;;AACA;;AACA;;;;AAIA;;;;;;eAMe,MACb,sBAASA,GAAD,IAAS;AACf;AACA;AACA,MAAIA,GAAG,CAACC,MAAJ,CAAWC,OAAX,KAAuB,IAAvB,IAA+BF,GAAG,CAACC,MAAJ,CAAWC,OAAX,KAAuBC,SAA1D,EAAqE;AACnE,WAAO,mBAAK,GAAL,EAAU;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAV,EAAiC,EAAjC,CAAP;AACD;;AACD,SAAOC,aAAP;AACD,CAPD,C","sourcesContent":["// @flow\nimport request from './request';\nimport send from './send';\nimport next from './next';\n\nimport type {App} from './types';\n\n/**\n * Handle the case when the server is in the process of shutting down. This is\n * useful for upstream proxies that want to know that the server is not ready\n * to handle any more requests.\n * @returns {App} App instance.\n */\nexport default (): App =>\n  request((req) => {\n    // TODO: Any way to make flow happy with this?\n    // $ExpectError\n    if (req.socket._handle === null || req.socket._handle === undefined) {\n      return send(502, {Connection: 'close'}, '');\n    }\n    return next;\n  });\n"],"file":"graceful.js"}