{"version":3,"sources":["../src/apply.js"],"names":["cache","WeakMap","mapToCache","item","has","get","result","set","baseApp","request","Error","upgrade","listening","close","error","err","upgradeError","requestError","createHandler","app","cont","appItems","handleApp","results","push","Promise","all","then","x","_apply","rest","map","pure","handler","req","res","socket","head","apply","args","slice","length","out"],"mappings":"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","sourcesContent":["// @flow\nimport type {App, InternalInstance} from './types';\nimport pure from './pure';\n\ntype Cont<T> = (...rest: Array<*>) => T | Promise<T>;\n\nconst cache: WeakMap<*, WeakMap<*, *>> = new WeakMap();\n\nconst mapToCache = (item: *): WeakMap<*, *> => {\n  if (cache.has(item)) {\n    // TODO: https://github.com/facebook/flow/issues/2751\n    // flowlint-next-line unclear-type: off\n    return (cache.get(item): any);\n  }\n  const result: WeakMap<*, *> = new WeakMap();\n  cache.set(item, result);\n  return result;\n};\n\ntype Callback<T> = ((T) => App) => App;\n\nconst baseApp = {\n  request: /* istanbul ignore next */ (): void => {\n    throw new Error();\n  },\n  upgrade: /* istanbul ignore next */ (): void => {\n    throw new Error();\n  },\n  listening: /* istanbul ignore next */ (): void => {\n    throw new Error();\n  },\n  close: /* istanbul ignore next */ (): void => {\n    throw new Error();\n  },\n  error: /* istanbul ignore next */ (err): void => {\n    throw err;\n  },\n  upgradeError: (err): void => {\n    throw err;\n  },\n  requestError: (err): void => {\n    throw err;\n  },\n};\n\nconst createHandler = (app, cont, appItems) => async (cache, handleApp) => {\n  const results = [];\n  for (const app of appItems) {\n    if (cache.has(app)) {\n      results.push(cache.get(app));\n    } else {\n      const result = handleApp(app);\n      cache.set(app, result);\n      results.push(result);\n    }\n  }\n  const result = await Promise.all(results).then((x) => {\n    return cont(...x);\n  });\n  return await handleApp(result(app));\n};\n\nconst _apply = (cont: Cont<App>, rest: Array<Callback<*>>): App => {\n  const appItems: Array<InternalInstance> = rest.map((item: Callback<*>) => {\n    if (cache.has(item)) {\n      // FIXME\n      // $ExpectError\n      return cache.get(item);\n    }\n    const app = item(pure)(baseApp);\n    // FIXME\n    // $ExpectError\n    cache.set(item, app);\n    return app;\n  });\n\n  return (app: InternalInstance): InternalInstance => {\n    const handler = createHandler(app, cont, appItems);\n    return {\n      ...app,\n      request: async (req, res) => {\n        try {\n          const cache: WeakMap<*, *> = mapToCache(req);\n          return await handler(cache, async (app) => {\n            return await app.request(req, res);\n          });\n        } catch (err) {\n          return app.requestError(err, req, res);\n        }\n      },\n      upgrade: async (req, socket, head) => {\n        try {\n          const cache: WeakMap<*, *> = mapToCache(socket);\n          return await handler(cache, async (app) => {\n            return app.upgrade(req, socket, head);\n          });\n        } catch (err) {\n          return app.upgradeError(err, req, socket, head);\n        }\n      },\n    };\n  };\n};\n\ntype Apply = {\n  (() => App | Promise<App>): App,\n  <V1>(Callback<V1>, (V1) => App | Promise<App>): App,\n  <V1, V2>(Callback<V1>, Callback<V2>, (V1, V2) => App | Promise<App>): App,\n  <V1, V2, V3>(\n    Callback<V1>,\n    Callback<V2>,\n    Callback<V3>,\n    (V1, V2, V3) => App | Promise<App>,\n  ): App,\n  <V1, V2, V3, V4>(\n    Callback<V1>,\n    Callback<V2>,\n    Callback<V3>,\n    Callback<V4>,\n    (V1, V2, V3, V4) => App | Promise<App>,\n  ): App,\n};\n\n/**\n * @desc\n * @tag core\n * @returns {App} New app.\n */\nconst apply: Apply = (...args): App => {\n  // TODO: Any way to make this better?\n  // flowlint-next-line unclear-type: off\n  const rest: Array<Callback<*>> = (args.slice(0, args.length - 1): any);\n  const cont = args[args.length - 1];\n  const out = _apply(cont, rest);\n  return out;\n};\n\nexport default apply;\n"],"file":"apply.js"}