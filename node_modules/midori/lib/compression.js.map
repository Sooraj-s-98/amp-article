{"version":3,"sources":["../src/compression.js"],"names":["options"],"mappings":";;;;;;;AACA;;AACA;;;;AAgBA;;;;;;eAMgBA,OAAD,IAA4B,yBAAW,0BAAYA,OAAZ,CAAX,C","sourcesContent":["// @flow\nimport compression from 'compression';\nimport middleware from './middleware';\n\nimport type {App} from './types';\n\ntype Filter = (req: *, res: *) => boolean;\n\ntype Options = {\n  chunkSize?: number,\n  filter?: Filter,\n  level?: -1 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9,\n  memLevel?: number,\n  strategy?: number,\n  threshold?: string | number | false,\n  windowBits?: number,\n};\n\n/**\n * Compress the response sent back to the client.\n * @tag util\n * @param {?Object} options Compression options.\n * @returns {App} App instance.\n */\nexport default (options: ?Options): App => middleware(compression(options));\n"],"file":"compression.js"}