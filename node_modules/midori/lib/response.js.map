{"version":3,"sources":["../src/response.js"],"names":["endOfHeaders","Buffer","from","ProxyUpgradeResponse","constructor","socket","oldWrite","write","oldEnd","end","headBuffer","restore","wrieHeadBuffer","data","concat","index","slice","Object","assign","headersSent","handleData","encoding","ended","writable","isBuffer","undefined","cb","call","getHeader","name","headers","toLowerCase","writeHead","statusCode","msg","statusMessage","err","newHeaders","keys","forEach","k","length","header","value","Array","isArray","removeHeader","n","setHeader","v","removeListener","args","on","once","emit","finished","proxyResponseCache","WeakMap","getUpgradeResponse","req","get","installUpgradeResponse","proxyResponse","set","response","handler","app","request","res","nextApp","requestError","upgrade","head","upgradeError","_selector"],"mappings":";;;;;;;AACA;;AACA;;AACA;;;;;;;;AAUA,MAAMA,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAY,UAAZ,CAArB;;AAEA,MAAMC,oBAAN,CAA2B;AAOzBC,EAAAA,WAAW,CAACC,MAAD,EAAiB;AAAA,qCANT,EAMS;;AAAA,wCALP,GAKO;;AAAA,2CAJH,IAIG;;AAAA,yCAHL,KAGK;;AAAA;;AAAA,sCADR,KACQ;;AAC1B,SAAKA,MAAL,GAAcA,MAAd;AACA,UAAMC,QAAQ,GAAGD,MAAM,CAACE,KAAxB;AACA,UAAMC,MAAM,GAAGH,MAAM,CAACI,GAAtB;AAEA,QAAIC,UAAU,GAAG,IAAjB;;AAEA,UAAMC,OAAO,GAAG,MAAM;AACpB;AACAN,MAAAA,MAAM,CAACE,KAAP,GAAeD,QAAf,CAFoB,CAGpB;;AACAD,MAAAA,MAAM,CAACI,GAAP,GAAaD,MAAb;AACD,KALD;;AAOA,UAAMI,cAAc,GAAIC,IAAD,IAAU;AAC/BH,MAAAA,UAAU,GAAGA,UAAU,GAAGT,MAAM,CAACa,MAAP,CAAc,CAACJ,UAAD,EAAaG,IAAb,CAAd,CAAH,GAAuCA,IAA9D;AACA,YAAME,KAAK,GAAG,4BAAQL,UAAR,EAAoBV,YAApB,CAAd;;AACA,UAAIe,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBL,QAAAA,UAAU,CAACM,KAAX,CAAiB,CAAjB,EAAoBD,KAApB;AACAE,QAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoB,0BAAYR,UAAZ,CAApB;AACA,aAAKS,WAAL,GAAmB,IAAnB;AACAR,QAAAA,OAAO;AACR;AACF,KATD;;AAWA,UAAMS,UAAU,GAAG,CAACP,IAAD,EAAOQ,QAAP,KAAoB;AACrC;AACA,UAAIhB,MAAM,CAACiB,KAAP,IAAgB,CAACjB,MAAM,CAACkB,QAA5B,EAAsC;AACpCZ,QAAAA,OAAO;AACP;AACD;;AACD,UAAI,KAAKQ,WAAL,IAAoB,CAACN,IAAzB,EAA+B;AAC7B;AACD;;AACD,UAAI,CAACZ,MAAM,CAACuB,QAAP,CAAgBX,IAAhB,CAAL,EAA4B;AAC1BD,QAAAA,cAAc,CACZX,MAAM,CAACC,IAAP,CACEW,IADF,EAEE,OAAOQ,QAAP,KAAoB,QAApB,GAA+BA,QAA/B,GAA0CI,SAF5C,CADY,CAAd;AAMD,OAPD,MAOO;AACLb,QAAAA,cAAc,CAACC,IAAD,CAAd;AACD;AACF,KAnBD,CAzB0B,CA8C1B;;;AACAR,IAAAA,MAAM,CAACE,KAAP,GAAe,CAACM,IAAD,EAAOQ,QAAP,EAAiBK,EAAjB,KAAwB;AACrCN,MAAAA,UAAU,CAACP,IAAD,EAAOQ,QAAP,CAAV;AACA,aAAOf,QAAQ,CAACqB,IAAT,CAActB,MAAd,EAAsBQ,IAAtB,EAA4BQ,QAA5B,EAAsCK,EAAtC,CAAP;AACD,KAHD,CA/C0B,CAoD1B;;;AACArB,IAAAA,MAAM,CAACI,GAAP,GAAa,CAACI,IAAD,EAAOQ,QAAP,EAAiBK,EAAjB,KAAwB;AACnCN,MAAAA,UAAU,CAACP,IAAD,EAAOQ,QAAP,CAAV;AACA,aAAOb,MAAM,CAACmB,IAAP,CAAYtB,MAAZ,EAAoBQ,IAApB,EAA0BQ,QAA1B,EAAoCK,EAApC,CAAP;AACD,KAHD;AAID;;AACDE,EAAAA,SAAS,CAACC,IAAD,EAAO;AACd,WAAO,KAAKC,OAAL,CAAaD,IAAI,CAACE,WAAL,EAAb,CAAP;AACD;;AACDC,EAAAA,SAAS,CAACC,UAAkB,GAAG,KAAKA,UAA3B,EAAuCC,GAAvC,EAA6CJ,OAA7C,EAAuD;AAC9D,QAAI,KAAKX,WAAT,EAAsB;AACpB;AACD;;AACD,SAAKc,UAAL,GAAkBA,UAAlB;;AACA,QAAI,OAAOC,GAAP,KAAe,QAAnB,EAA6B;AAC3B,WAAKC,aAAL,GAAqBD,GAArB;AACD,KAFD,MAEO;AACL,UAAI;AACF,aAAKC,aAAL,GAAqB,oCAAc,KAAKF,UAAnB,CAArB;AACD,OAFD,CAEE,OAAOG,GAAP,EAAY;AACZ,aAAKD,aAAL,GAAqB,EAArB;AACD;AACF;;AACD,QAAIE,UAAU,GAAG,EAAjB;;AACA,QAAI,OAAOP,OAAP,KAAmB,WAAnB,IAAkC,OAAOI,GAAP,KAAe,QAArD,EAA+D;AAC7DG,MAAAA,UAAU,GAAGH,GAAb;AACD,KAFD,MAEO,IAAI,OAAOJ,OAAP,KAAmB,QAAvB,EAAiC;AACtCO,MAAAA,UAAU,GAAGP,OAAb;AACD;;AACDb,IAAAA,MAAM,CAACqB,IAAP,CAAYD,UAAZ,EAAwBE,OAAxB,CAAiCC,CAAD,IAAO;AACrC,WAAKV,OAAL,CAAaU,CAAC,CAACT,WAAF,EAAb,IAAgCM,UAAU,CAACG,CAAD,CAA1C;AACD,KAFD;AAGA,SAAKrB,WAAL,GAAmB,IAAnB;AACA,SAAKd,MAAL,CAAYE,KAAZ,CAAmB,YAAW,KAAK0B,UAAW,EAA9C;;AACA,QACE,OAAO,KAAKE,aAAZ,KAA8B,QAA9B,IACA,KAAKA,aAAL,CAAmBM,MAAnB,GAA4B,CAF9B,EAGE;AACA,WAAKpC,MAAL,CAAYE,KAAZ,CAAmB,IAAG,KAAK4B,aAAc,IAAzC;AACD,KALD,MAKO;AACL,WAAK9B,MAAL,CAAYE,KAAZ,CAAkB,IAAlB;AACD;;AACDU,IAAAA,MAAM,CAACqB,IAAP,CAAY,KAAKR,OAAjB,EAA0BS,OAA1B,CAAmCG,MAAD,IAAY;AAC5C,YAAMC,KAAK,GAAG,KAAKb,OAAL,CAAaY,MAAb,CAAd;;AACA,UAAI,OAAOC,KAAP,KAAiB,QAArB,EAA+B;AAC7B,aAAKtC,MAAL,CAAYE,KAAZ,CAAmB,GAAEmC,MAAO,KAAIC,KAAM,IAAtC;AACD,OAFD,MAEO,IAAIC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;AAC/BA,QAAAA,KAAK,CAACJ,OAAN,CAAeI,KAAD,IAAW;AACvB,eAAKtC,MAAL,CAAYE,KAAZ,CAAmB,GAAEmC,MAAO,KAAIC,KAAM,IAAtC;AACD,SAFD;AAGD;AACF,KATD;AAUA,SAAKtC,MAAL,CAAYE,KAAZ,CAAkB,IAAlB;AACD;;AACDuC,EAAAA,YAAY,CAACC,CAAD,EAAI;AACd,WAAO,KAAKjB,OAAL,CAAaiB,CAAC,CAAChB,WAAF,EAAb,CAAP;AACD;;AACDiB,EAAAA,SAAS,CAACD,CAAD,EAAIE,CAAJ,EAAO;AACd,SAAKnB,OAAL,CAAaiB,CAAC,CAAChB,WAAF,EAAb,IAAgCkB,CAAhC;AACD;;AACDC,EAAAA,cAAc,CAAC,GAAGC,IAAJ,EAAU;AACtB,SAAK9C,MAAL,CAAY6C,cAAZ,CAA2B,GAAGC,IAA9B;AACD;;AACDC,EAAAA,EAAE,CAAC,GAAGD,IAAJ,EAAU;AACV,SAAK9C,MAAL,CAAY+C,EAAZ,CAAe,GAAGD,IAAlB;AACA,WAAO,IAAP;AACD;;AACDE,EAAAA,IAAI,CAAC,GAAGF,IAAJ,EAAU;AACZ,SAAK9C,MAAL,CAAYgD,IAAZ,CAAiB,GAAGF,IAApB;AACA,WAAO,IAAP;AACD;;AACDG,EAAAA,IAAI,CAAC,GAAGH,IAAJ,EAAU;AACZ,SAAK9C,MAAL,CAAYiD,IAAZ,CAAiB,GAAGH,IAApB;AACA,WAAO,IAAP;AACD;;AACD5C,EAAAA,KAAK,CAAC,GAAG4C,IAAJ,EAAU;AACb,QAAI,CAAC,KAAKhC,WAAV,EAAuB;AACrB,WAAKa,SAAL;AACD;;AACD,WAAO,KAAK3B,MAAL,CAAYE,KAAZ,CAAkB,GAAG4C,IAArB,CAAP;AACD;;AACD1C,EAAAA,GAAG,CAAC,GAAG0C,IAAJ,EAAU;AACX,SAAKI,QAAL,GAAgB,IAAhB;;AACA,QAAI,CAAC,KAAKpC,WAAV,EAAuB;AACrB,WAAKa,SAAL;AACD;;AACD,WAAO,KAAK3B,MAAL,CAAYI,GAAZ,CAAgB,GAAG0C,IAAnB,CAAP;AACD;;AAlJwB;;AAqJ3B,MAAMK,kBAGL,GAAG,IAAIC,OAAJ,EAHJ;;AAKO,MAAMC,kBAAkB,GAAIC,GAAD,IAA0B;AAC1D,SAAOH,kBAAkB,CAACI,GAAnB,CAAuBD,GAAvB,CAAP;AACD,CAFM;;;;AAIA,MAAME,sBAAsB,GAAG,CACpCF,GADoC,EAEpCtD,MAFoC,KAGX;AACzB,MAAIyD,aAAa,GAAGN,kBAAkB,CAACI,GAAnB,CAAuBD,GAAvB,CAApB;;AACA,MAAIG,aAAa,KAAKrC,SAAtB,EAAiC;AAC/BqC,IAAAA,aAAa,GAAG,IAAI3D,oBAAJ,CAAyBE,MAAzB,CAAhB;AACAmD,IAAAA,kBAAkB,CAACO,GAAnB,CAAuBJ,GAAvB,EAA4BG,aAA5B;AACD;;AACD,SAAOA,aAAP;AACD,CAVM;AAYP;;;;;;;;;AAKA,MAAME,QAAQ,GAAIC,OAAD,IAAmCC,GAAD,IAAS;AAC1D,2BACKA,GADL;AAEEC,IAAAA,OAAO,EAAE,OAAOR,GAAP,EAAYS,GAAZ,KAAoB;AAC3B,UAAI;AACF,cAAMC,OAAO,GAAG,MAAMJ,OAAO,CAACG,GAAD,CAA7B;AACA,eAAO,MAAMC,OAAO,CAACH,GAAD,CAAP,CAAaC,OAAb,CAAqBR,GAArB,EAA0BS,GAA1B,CAAb;AACD,OAHD,CAGE,OAAOhC,GAAP,EAAY;AACZ,eAAO,MAAM8B,GAAG,CAACI,YAAJ,CAAiBlC,GAAjB,EAAsBuB,GAAtB,EAA2BS,GAA3B,CAAb;AACD;AACF,KATH;AAUEG,IAAAA,OAAO,EAAE,OAAOZ,GAAP,EAAYtD,MAAZ,EAAoBmE,IAApB,KAA6B;AACpC,UAAI;AACF,cAAMV,aAAa,GAAGD,sBAAsB,CAACF,GAAD,EAAMtD,MAAN,CAA5C,CADE,CAEF;;AACA,cAAMgE,OAAO,GAAG,MAAMJ,OAAO,CAAEH,aAAF,CAA7B;AACA,eAAO,MAAMO,OAAO,CAACH,GAAD,CAAP,CAAaK,OAAb,CAAqBZ,GAArB,EAA0BtD,MAA1B,EAAkCmE,IAAlC,CAAb;AACD,OALD,CAKE,OAAOpC,GAAP,EAAY;AACZ,eAAO,MAAM8B,GAAG,CAACO,YAAJ,CAAiBrC,GAAjB,EAAsBuB,GAAtB,EAA2BtD,MAA3B,EAAmCmE,IAAnC,CAAb;AACD;AACF;AAnBH;AAqBD,CAtBD;;AAwBAR,QAAQ,CAACU,SAAT,GAAqB,MAAM,IAA3B;;eAEeV,Q","sourcesContent":["// @flow\nimport {getStatusText} from 'http-status-codes';\nimport httpHeaders from 'http-headers';\nimport indexOf from 'buffer-indexof';\n\nimport type {App} from './types';\nimport type {IncomingMessage, ServerResponse} from 'http';\nimport type {Socket} from 'net';\ntype RequestHandler = (req: ServerResponse) => App | Promise<App>;\ntype Headers = {\n  [string]: Array<string> | string,\n};\n\nconst endOfHeaders = Buffer.from('\\r\\n\\r\\n');\n\nclass ProxyUpgradeResponse {\n  headers: Headers = {};\n  statusCode: number = 200;\n  statusMessage: ?string = null;\n  headersSent: boolean = false;\n  socket: Socket;\n  finished: boolean = false;\n  constructor(socket: Socket) {\n    this.socket = socket;\n    const oldWrite = socket.write;\n    const oldEnd = socket.end;\n\n    let headBuffer = null;\n\n    const restore = () => {\n      // $ExpectError\n      socket.write = oldWrite;\n      // $ExpectError\n      socket.end = oldEnd;\n    };\n\n    const wrieHeadBuffer = (data) => {\n      headBuffer = headBuffer ? Buffer.concat([headBuffer, data]) : data;\n      const index = indexOf(headBuffer, endOfHeaders);\n      if (index !== -1) {\n        headBuffer.slice(0, index);\n        Object.assign(this, httpHeaders(headBuffer));\n        this.headersSent = true;\n        restore();\n      }\n    };\n\n    const handleData = (data, encoding) => {\n      // $ExpectError\n      if (socket.ended || !socket.writable) {\n        restore();\n        return;\n      }\n      if (this.headersSent || !data) {\n        return;\n      }\n      if (!Buffer.isBuffer(data)) {\n        wrieHeadBuffer(\n          Buffer.from(\n            data,\n            typeof encoding === 'string' ? encoding : undefined,\n          ),\n        );\n      } else {\n        wrieHeadBuffer(data);\n      }\n    };\n\n    // $ExpectError\n    socket.write = (data, encoding, cb) => {\n      handleData(data, encoding);\n      return oldWrite.call(socket, data, encoding, cb);\n    };\n\n    // $ExpectError\n    socket.end = (data, encoding, cb) => {\n      handleData(data, encoding);\n      return oldEnd.call(socket, data, encoding, cb);\n    };\n  }\n  getHeader(name) {\n    return this.headers[name.toLowerCase()];\n  }\n  writeHead(statusCode: number = this.statusCode, msg?, headers?) {\n    if (this.headersSent) {\n      return;\n    }\n    this.statusCode = statusCode;\n    if (typeof msg === 'string') {\n      this.statusMessage = msg;\n    } else {\n      try {\n        this.statusMessage = getStatusText(this.statusCode);\n      } catch (err) {\n        this.statusMessage = '';\n      }\n    }\n    let newHeaders = {};\n    if (typeof headers === 'undefined' && typeof msg === 'object') {\n      newHeaders = msg;\n    } else if (typeof headers === 'object') {\n      newHeaders = headers;\n    }\n    Object.keys(newHeaders).forEach((k) => {\n      this.headers[k.toLowerCase()] = newHeaders[k];\n    });\n    this.headersSent = true;\n    this.socket.write(`HTTP/1.1 ${this.statusCode}`);\n    if (\n      typeof this.statusMessage === 'string' &&\n      this.statusMessage.length > 0\n    ) {\n      this.socket.write(` ${this.statusMessage}\\n`);\n    } else {\n      this.socket.write('\\n');\n    }\n    Object.keys(this.headers).forEach((header) => {\n      const value = this.headers[header];\n      if (typeof value === 'string') {\n        this.socket.write(`${header}: ${value}\\n`);\n      } else if (Array.isArray(value)) {\n        value.forEach((value) => {\n          this.socket.write(`${header}: ${value}\\n`);\n        });\n      }\n    });\n    this.socket.write('\\n');\n  }\n  removeHeader(n) {\n    delete this.headers[n.toLowerCase()];\n  }\n  setHeader(n, v) {\n    this.headers[n.toLowerCase()] = v;\n  }\n  removeListener(...args) {\n    this.socket.removeListener(...args);\n  }\n  on(...args) {\n    this.socket.on(...args);\n    return this;\n  }\n  once(...args) {\n    this.socket.once(...args);\n    return this;\n  }\n  emit(...args) {\n    this.socket.emit(...args);\n    return this;\n  }\n  write(...args) {\n    if (!this.headersSent) {\n      this.writeHead();\n    }\n    return this.socket.write(...args);\n  }\n  end(...args) {\n    this.finished = true;\n    if (!this.headersSent) {\n      this.writeHead();\n    }\n    return this.socket.end(...args);\n  }\n}\n\nconst proxyResponseCache: WeakMap<\n  IncomingMessage,\n  ProxyUpgradeResponse,\n> = new WeakMap();\n\nexport const getUpgradeResponse = (req: IncomingMessage) => {\n  return proxyResponseCache.get(req);\n};\n\nexport const installUpgradeResponse = (\n  req: IncomingMessage,\n  socket: Socket,\n): ProxyUpgradeResponse => {\n  let proxyResponse = proxyResponseCache.get(req);\n  if (proxyResponse === undefined) {\n    proxyResponse = new ProxyUpgradeResponse(socket);\n    proxyResponseCache.set(req, proxyResponse);\n  }\n  return proxyResponse;\n};\n\n/**\n * Main thing.\n * @param {Function} handler Request handler. Must return another app.\n * @returns {App} App instance.\n */\nconst response = (handler: RequestHandler): App => (app) => {\n  return {\n    ...app,\n    request: async (req, res) => {\n      try {\n        const nextApp = await handler(res);\n        return await nextApp(app).request(req, res);\n      } catch (err) {\n        return await app.requestError(err, req, res);\n      }\n    },\n    upgrade: async (req, socket, head) => {\n      try {\n        const proxyResponse = installUpgradeResponse(req, socket);\n        // flowlint-next-line unclear-type: off\n        const nextApp = await handler((proxyResponse: any));\n        return await nextApp(app).upgrade(req, socket, head);\n      } catch (err) {\n        return await app.upgradeError(err, req, socket, head);\n      }\n    },\n  };\n};\n\nresponse._selector = () => null;\n\nexport default response;\n"],"file":"response.js"}