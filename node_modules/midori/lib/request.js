"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * Main thing.
 * @param {Function} handler Request handler. Must return another app.
 * @returns {App} App instance.
 */
const request = handler => app => {
  return _objectSpread({}, app, {
    request: async (req, res) => {
      try {
        const nextApp = await handler(req);
        const result = await nextApp(app).request(req, res);
        return await result;
      } catch (err) {
        return await app.requestError(err, req, res);
      }
    },
    upgrade: async (req, socket, head) => {
      try {
        const nextApp = await handler(req);
        return await nextApp(app).upgrade(req, socket, head);
      } catch (err) {
        return await app.upgradeError(err, req, socket, head);
      }
    }
  });
};

request._selector = () => null;

var _default = request;
exports.default = _default;
//# sourceMappingURL=request.js.map