{"version":3,"sources":["../../src/match/util.js"],"names":["create","matches","app","guard","hosts","RegExp","pattern","val","exec","Array","isArray","guards","map","some","x","fn","TypeError"],"mappings":";;;;;;;AAGO,MAAMA,MAAM,GAAIC,OAAD,IAAqCC,GAAD,IAAgB;AACxE,SAAO;AACLA,IAAAA,GADK;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;;;;AAWA,MAAME,KAAK,GAAOC,KAAJ,IAA8C;AACjE,MAAIA,KAAK,YAAYC,MAArB,EAA6B;AAC3B;AACA,UAAMC,OAAe,GAAGF,KAAxB;AACA,WAAQG,GAAD,IAAS,OAAOA,GAAP,KAAe,QAAf,IAA2B,CAAC,CAACD,OAAO,CAACE,IAAR,CAAaD,GAAb,CAA7C;AACD,GAJD,MAIO,IAAI,OAAOH,KAAP,KAAiB,QAArB,EAA+B;AACpC,WAAQG,GAAD,IAASA,GAAG,KAAKH,KAAxB;AACD,GAFM,MAEA,IAAIK,KAAK,CAACC,OAAN,CAAcN,KAAd,CAAJ,EAA0B;AAC/B,UAAMO,MAAM,GAAGP,KAAK,CAACQ,GAAN,CAAUT,KAAV,CAAf;AACA,WAAQI,GAAD,IAASI,MAAM,CAACE,IAAP,CAAaC,CAAD,IAAOA,CAAC,CAACP,GAAD,CAApB,CAAhB;AACD,GAHM,MAGA,IAAI,OAAOH,KAAP,KAAiB,UAArB,EAAiC;AACtC,UAAMW,EAAqB,GAAGX,KAA9B;AACA,WAAOW,EAAP;AACD;;AACD,QAAM,IAAIC,SAAJ,EAAN;AACD,CAfM","sourcesContent":["// @flow\nimport type {Match, Matches, MatchCreator} from '../types';\n\nexport const create = (matches: Matches): MatchCreator => (app): Match => {\n  return {\n    app,\n    matches,\n  };\n};\n\ntype _Predicate<T> = string | RegExp | ((x: T) => boolean);\n\nexport type Predicate<T> = _Predicate<T> | Array<_Predicate<T>>;\n\nexport const guard = <T>(hosts: Predicate<T>): ((T) => boolean) => {\n  if (hosts instanceof RegExp) {\n    // TODO: FIXME: Flow requires this assignment.\n    const pattern: RegExp = hosts;\n    return (val) => typeof val === 'string' && !!pattern.exec(val);\n  } else if (typeof hosts === 'string') {\n    return (val) => val === hosts;\n  } else if (Array.isArray(hosts)) {\n    const guards = hosts.map(guard);\n    return (val) => guards.some((x) => x(val));\n  } else if (typeof hosts === 'function') {\n    const fn: (x: T) => boolean = hosts;\n    return fn;\n  }\n  throw new TypeError();\n};\n"],"file":"util.js"}