"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _httpProxy = _interopRequireDefault(require("http-proxy"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _default(options) {
  const proxy = _httpProxy.default.createProxy();

  if (options.onRequest) {
    proxy.on('proxyReq', options.onRequest);
  }

  if (options.onResponse) {
    proxy.on('proxyRes', options.onResponse);
  }

  return app => {
    return _objectSpread({}, app, {
      request(req, res) {
        proxy.web(req, res, options, err => app.requestError(err, req, res));
      },

      upgrade(req, socket, head) {
        proxy.ws(req, socket, head, options, err => app.upgradeError(err, req, socket, head));
      }

    });
  };
}
//# sourceMappingURL=proxy.js.map