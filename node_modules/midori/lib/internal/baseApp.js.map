{"version":3,"sources":["../../src/internal/baseApp.js"],"names":["baseApp","request","req","res","finished","headersSent","statusCode","end","upgrade","socket","_head","listenerCount","listening","close","error","genericErrorHandler","upgradeError","upgradeErrorHandler","requestError","requestErrorHandler"],"mappings":";;;;;;;AACA;;AACA;;AACA;;;;AAKA,MAAMA,OAAO,GAAG;AACdC,EAAAA,OAAO,CAACC,GAAD,EAAuBC,GAAvB,EAA4C;AACjD,QAAI,CAACA,GAAG,CAACC,QAAT,EAAmB;AACjB,UAAI,CAACD,GAAG,CAACE,WAAT,EAAsB;AACpBF,QAAAA,GAAG,CAACG,UAAJ,GAAiB,GAAjB;AACD;;AACDH,MAAAA,GAAG,CAACI,GAAJ;AACD;AACF,GARa;;AASdC,EAAAA,OAAO,CAACN,GAAD,EAAuBO,MAAvB,EAAuCC,KAAvC,EAAiD;AACtD;AACA;AACA;AACA;AACA,QACE,OAAO,KAAKC,aAAZ,KAA8B,UAA9B,IACA,KAAKA,aAAL,CAAmB,SAAnB,MAAkC,CAFpC,EAGE;AACAF,MAAAA,MAAM,CAACF,GAAP,CACE,+BAA+B,uBAA/B,GAAyD,MAD3D;AAGD;AACF,GAtBa;;AAuBdK,EAAAA,SAAS,GAAG,CAAE,CAvBA;;AAwBdC,EAAAA,KAAK,GAAG,CAAE,CAxBI;;AAyBdC,EAAAA,KAAK,EAAEC,4BAzBO;AA0BdC,EAAAA,YAAY,EAAEC,4BA1BA;AA2BdC,EAAAA,YAAY,EAAEC;AA3BA,CAAhB;eA8BenB,O","sourcesContent":["// @flow\nimport requestErrorHandler from './error/requestErrorHandler';\nimport upgradeErrorHandler from './error/upgradeErrorHandler';\nimport genericErrorHandler from './error/genericErrorHandler';\n\nimport type {IncomingMessage, ServerResponse} from 'http';\nimport type {Socket} from 'net';\n\nconst baseApp = {\n  request(req: IncomingMessage, res: ServerResponse) {\n    if (!res.finished) {\n      if (!res.headersSent) {\n        res.statusCode = 404;\n      }\n      res.end();\n    }\n  },\n  upgrade(req: IncomingMessage, socket: Socket, _head: *) {\n    // There isn't really a \"catch-all\" like `res.finished` for the `upgrade`\n    // event. So if we're the only listener then we know we can close the\n    // connection. Otherwise we just pray whomever else has attached to the\n    // event knows what they're doing.\n    if (\n      typeof this.listenerCount !== 'function' ||\n      this.listenerCount('upgrade') === 1\n    ) {\n      socket.end(\n        'HTTP/1.1 404 Not Found\\r\\n' + 'Connection: Close\\r\\n' + '\\r\\n',\n      );\n    }\n  },\n  listening() {},\n  close() {},\n  error: genericErrorHandler,\n  upgradeError: upgradeErrorHandler,\n  requestError: requestErrorHandler,\n};\n\nexport default baseApp;\n"],"file":"baseApp.js"}