{"version":3,"sources":["../src/url.js"],"names":["request","req","out","host","headers","hostname","port","split","protocol","connection","encrypted","slashes","href","path","origin"],"mappings":";;;;;;;AACA;;AACA;;AACA;;;;eAIe,6BACbA,gBADa,EAEZC,GAAD,IAA+B;AAC7B,QAAMC,GAAG,GAAG,uBAAID,GAAJ,CAAZ;AACA,QAAME,IAAI,GAAGF,GAAG,CAACG,OAAJ,CAAYD,IAAZ,IAAoB,EAAjC;AACAD,EAAAA,GAAG,CAACC,IAAJ,GAAWA,IAAX;AACA,QAAM,CAACE,QAAD,EAAWC,IAAX,IAAmBH,IAAI,CAACI,KAAL,CAAW,GAAX,CAAzB;AACAL,EAAAA,GAAG,CAACG,QAAJ,GAAeA,QAAf;AACAH,EAAAA,GAAG,CAACI,IAAJ,GAAWA,IAAX,CAN6B,CAO7B;AACA;AACA;;AACAJ,EAAAA,GAAG,CAACM,QAAJ,GAAeP,GAAG,CAACQ,UAAJ,CAAeC,SAAf,GAA2B,OAA3B,GAAqC,MAApD,CAV6B,CAW7B;AACA;;AACAR,EAAAA,GAAG,CAACM,QAAJ,GAAeP,GAAG,CAACG,OAAJ,CAAY,mBAAZ,KAAoCF,GAAG,CAACM,QAAxC,IAAoD,EAAnE;AACAN,EAAAA,GAAG,CAACM,QAAJ,GAAeN,GAAG,CAACM,QAAJ,CAAaD,KAAb,CAAmB,SAAnB,EAA8B,CAA9B,CAAf;AACAL,EAAAA,GAAG,CAACM,QAAJ,GAAgB,GAAEN,GAAG,CAACM,QAAS,GAA/B,CAf6B,CAgB7B;;AACAN,EAAAA,GAAG,CAACS,OAAJ,GAAc,IAAd,CAjB6B,CAkB7B;;AACAT,EAAAA,GAAG,CAACU,IAAJ,GAAY,GAAEV,GAAG,CAACM,QAAS,KAAIN,GAAG,CAACC,IAAK,GAAED,GAAG,CAACW,IAAK,EAAnD;AACAX,EAAAA,GAAG,CAACY,MAAJ,GAAab,GAAG,CAACG,OAAJ,CAAYU,MAAzB;AACA,SAAOZ,GAAP;AACD,CAxBY,C","sourcesContent":["// @flow\nimport request from './request';\nimport createSelector from './createSelector';\nimport url from 'parseurl';\n\nimport type {IncomingMessage} from 'http';\n\nexport default createSelector(\n  request,\n  (req: IncomingMessage): URL => {\n    const out = url(req);\n    const host = req.headers.host || '';\n    out.host = host;\n    const [hostname, port] = host.split(':');\n    out.hostname = hostname;\n    out.port = port;\n    // TODO: FIXME: Flow seems to think `IncomingMessage` does not have a field\n    // called `connection`.\n    // $ExpectError\n    out.protocol = req.connection.encrypted ? 'https' : 'http';\n    // TODO: Ensure header is from trusted proxy!!.\n    // TODO: Replace match proto code to use this\n    out.protocol = req.headers['x-forwarded-proto'] || out.protocol || '';\n    out.protocol = out.protocol.split(/\\s*,\\s*/)[0];\n    out.protocol = `${out.protocol}:`;\n    // $ExpectError\n    out.slashes = true;\n    // $ExpectError\n    out.href = `${out.protocol}//${out.host}${out.path}`;\n    out.origin = req.headers.origin;\n    return out;\n  },\n);\n"],"file":"url.js"}